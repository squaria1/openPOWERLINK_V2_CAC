<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.10.0" xml:lang="en-US">
  <compounddef id="csv_8cpp" kind="file" language="C++">
    <compoundname>csv.cpp</compoundname>
    <includes refid="csv_8h" local="yes">csv.h</includes>
    <incdepgraph>
      <node id="8">
        <label>configDefine.h</label>
        <link refid="config_define_8h"/>
      </node>
      <node id="2">
        <label>csv.h</label>
        <link refid="csv_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>eventOpl.h</label>
        <link refid="event_opl_8h"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>nodeId.h</label>
        <link refid="node_id_8h"/>
      </node>
      <node id="10">
        <label>opl.h</label>
        <link refid="opl_8h"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="30" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="31" relation="include">
        </childnode>
        <childnode refid="32" relation="include">
        </childnode>
        <childnode refid="33" relation="include">
        </childnode>
        <childnode refid="34" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="35" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="36" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>sensor.h</label>
        <link refid="sensor_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>statusErrorDefine.h</label>
        <link refid="status_error_define_8h"/>
      </node>
      <node id="25">
        <label>valve.h</label>
        <link refid="valve_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
        <childnode refid="28" relation="include">
        </childnode>
        <childnode refid="29" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>xapOpl.h</label>
        <link refid="xap_opl_8h"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp</label>
        <link refid="csv_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>console/console.h</label>
      </node>
      <node id="27">
        <label>cstdlib</label>
      </node>
      <node id="7">
        <label>ctype.h</label>
      </node>
      <node id="20">
        <label>errno.h</label>
      </node>
      <node id="17">
        <label>eventlog/eventlog.h</label>
      </node>
      <node id="19">
        <label>fcntl.h</label>
      </node>
      <node id="28">
        <label>filesystem</label>
      </node>
      <node id="23">
        <label>getopt/getopt.h</label>
      </node>
      <node id="32">
        <label>inttypes.h</label>
      </node>
      <node id="24">
        <label>io.h</label>
      </node>
      <node id="29">
        <label>iostream</label>
      </node>
      <node id="36">
        <label>limits.h</label>
      </node>
      <node id="35">
        <label>netselect/netselect.h</label>
      </node>
      <node id="34">
        <label>obdcreate/obdcreate.h</label>
      </node>
      <node id="15">
        <label>oplk/debugstr.h</label>
      </node>
      <node id="14">
        <label>oplk/oplk.h</label>
      </node>
      <node id="22">
        <label>signal.h</label>
      </node>
      <node id="31">
        <label>stdbool.h</label>
      </node>
      <node id="30">
        <label>stddef.h</label>
      </node>
      <node id="5">
        <label>stdint.h</label>
      </node>
      <node id="3">
        <label>stdio.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="21">
        <label>sys/types.h</label>
      </node>
      <node id="33">
        <label>system/system.h</label>
      </node>
      <node id="26">
        <label>time.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="var">
      <memberdef kind="variable" id="csv_8cpp_1ae4cbc04f9c4323ec7a331ddef6b578c4" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_ligne_c_s_v" kindref="compound">LigneCSV</ref> *</type>
        <definition>struct LigneCSV* dataEtats</definition>
        <argsstring></argsstring>
        <name>dataEtats</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="20" column="16" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="csv_8cpp_1a0604c88114d265423bd058430aef5358" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_ligne_vannes" kindref="compound">LigneVannes</ref> *</type>
        <definition>struct LigneVannes* dataPhysicalConfigVannes</definition>
        <argsstring></argsstring>
        <name>dataPhysicalConfigVannes</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="28" column="19" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="csv_8cpp_1a545bddd902931ddd3692b3792d3958b4" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_ligne_sensors" kindref="compound">LigneSensors</ref> *</type>
        <definition>struct LigneSensors* dataPhysicalConfigSensors</definition>
        <argsstring></argsstring>
        <name>dataPhysicalConfigSensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="36" column="20" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="csv_8cpp_1a6d01cb64bb5d3e9ccda826e7b892ae18" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_ligne_activation" kindref="compound">LigneActivation</ref> *</type>
        <definition>struct LigneActivation* dataActivation</definition>
        <argsstring></argsstring>
        <name>dataActivation</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="43" column="23" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="csv_8cpp_1ac119725e56f891ac0af277ad61a9eaf4" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_ligne_e_g" kindref="compound">LigneEG</ref> *</type>
        <definition>struct LigneEG* dataEG</definition>
        <argsstring></argsstring>
        <name>dataEG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="51" column="15" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="51" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="csv_8cpp_1a57ce52f959b46f63b41ea53578833174" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94" kindref="member">statusErrDef</ref></type>
        <definition>statusErrDef initCSV</definition>
        <argsstring>()</argsstring>
        <name>initCSV</name>
        <briefdescription>
<para>function to initialize the struct containing the values and read the 5 different CSV files. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>statusErrDef that values errAllocDataPhysValves, errAllocDataPhysSensors, errAllocDataActivation in case of a malloc allocation error or noError when the function exits successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="61" column="14" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="61" bodyend="124"/>
        <references refid="config_define_8h_1af03b9ef4da5daeff7665f07931101fdb" compoundref="config_define_8h" startline="121">COMMON_PHYSICAL_CONFIG_DIRECTORY</references>
        <references refid="opl_8cpp_1a063c1e70bcbeb72b1c2483b200839a85" compoundref="opl_8cpp" startline="19">EG</references>
        <references refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94aa748b576dd63269692bf94745ebde592" compoundref="status_error_define_8h" startline="68">errAllocDataActivation</references>
        <references refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ae97856e69e4799dd26242af002ea490d" compoundref="status_error_define_8h" startline="67">errAllocDataPhysSensors</references>
        <references refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94a52c0a0dc9ef385f587dda867044b4643" compoundref="status_error_define_8h" startline="66">errAllocDataPhysValves</references>
        <references refid="csv_8cpp_1a2e7bd32b81cf14bdd3867119fe4c75c2" compoundref="csv_8cpp" startline="344" endline="364">lireFichierActivation</references>
        <references refid="csv_8cpp_1ade728b48c3405b05be12be8e6b5d5206" compoundref="csv_8cpp" startline="313" endline="333">lireFichierSensors</references>
        <references refid="csv_8cpp_1ad8987ecbd2c5ce44f2a930a28a012b99" compoundref="csv_8cpp" startline="282" endline="302">lireFichierVannes</references>
        <references refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" compoundref="status_error_define_8h" startline="22">noError</references>
        <references refid="config_define_8h_1adb2604b345fe7f2f732f29ff27f245ab" compoundref="config_define_8h" startline="120">PHYSICAL_CONFIG_SENSORS_DIRECTORY</references>
        <references refid="config_define_8h_1ab5026e01006a4457989b22c57cc98f02" compoundref="config_define_8h" startline="119">PHYSICAL_CONFIG_VANNES_DIRECTORY</references>
        <references refid="csv_8cpp_1a44cd2131057b27749a53caad3ec77eb9" compoundref="csv_8cpp" startline="135" endline="179">refreshCSV</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="25" endline="216">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a44cd2131057b27749a53caad3ec77eb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94" kindref="member">statusErrDef</ref></type>
        <definition>statusErrDef refreshCSV</definition>
        <argsstring>()</argsstring>
        <name>refreshCSV</name>
        <briefdescription>
<para>function to get values of the new general state CSV and &quot;liaisonEGEtat.csv&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>statusErrDef that values errAllocDataEG , errAllocDataEtats, in case of a malloc allocation error or noError when the function exits successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="135" column="14" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="135" bodyend="179"/>
        <references refid="opl_8cpp_1a063c1e70bcbeb72b1c2483b200839a85" compoundref="opl_8cpp" startline="19">EG</references>
        <references refid="config_define_8h_1a4714f9212329c04dc628e204388611a1" compoundref="config_define_8h" startline="122">EG_ETAT_DIRECTORY</references>
        <references refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94a7f5fa8b07e851d30728b48a6706f3406" compoundref="status_error_define_8h" startline="64">errAllocDataEG</references>
        <references refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94aa17dee312ce9f8b84311bcfeeea687e4" compoundref="status_error_define_8h" startline="65">errAllocDataEtats</references>
        <references refid="csv_8cpp_1a810cafce9c6d5bb3e3ec3e8754ca924c" compoundref="csv_8cpp" startline="240" endline="271">lireFichierCSV</references>
        <references refid="csv_8cpp_1a6c7104900937bff943d7f36f4f9cb7f0" compoundref="csv_8cpp" startline="207" endline="228">lireFichierEG</references>
        <references refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" compoundref="status_error_define_8h" startline="22">noError</references>
        <references refid="config_define_8h_1a61233d5f57b883028d50415837de9da1" compoundref="config_define_8h" startline="118">STATE_CSV_DIRECTORY</references>
        <referencedby refid="csv_8cpp_1a57ce52f959b46f63b41ea53578833174" compoundref="csv_8cpp" startline="61" endline="124">initCSV</referencedby>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="25" endline="216">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a39604608c86deb3e5925261c5a9413ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94" kindref="member">statusErrDef</ref></type>
        <definition>statusErrDef extinctCSV</definition>
        <argsstring>()</argsstring>
        <name>extinctCSV</name>
        <briefdescription>
<para>function to free the 5 structs </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>statusErrDef noError when the function exits successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="187" column="14" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="187" bodyend="196"/>
        <references refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" compoundref="status_error_define_8h" startline="22">noError</references>
        <referencedby refid="main_8cpp_1ae66f6b31b5ad750f1fe042a706a4e3d4" compoundref="main_8cpp" startline="25" endline="216">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a6c7104900937bff943d7f36f4f9cb7f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94" kindref="member">statusErrDef</ref></type>
        <definition>statusErrDef lireFichierEG</definition>
        <argsstring>(const char *fileName)</argsstring>
        <name>lireFichierEG</name>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
<para>function to read &quot;liaisonEGEtat.csv&quot; until the end of the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>location and name of the CSV file to read </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>statusErrDef errOpenEGFile when the file fails to open, noError when the function exits successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="207" column="14" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="207" bodyend="228"/>
        <references refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94a30f34309a812bd0a316489459b8bb55d" compoundref="status_error_define_8h" startline="69">errOpenEGFile</references>
        <references refid="config_define_8h_1a706068f562dd5c64a8b7bbd4b2298dd1" compoundref="config_define_8h" startline="100">MAX_LINE_SIZE</references>
        <references refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" compoundref="status_error_define_8h" startline="22">noError</references>
        <references refid="csv_8cpp_1acbc16f61c722ba86bac4676c366b09bb" compoundref="csv_8cpp" startline="509" endline="531">remplirEG</references>
        <referencedby refid="csv_8cpp_1a44cd2131057b27749a53caad3ec77eb9" compoundref="csv_8cpp" startline="135" endline="179">refreshCSV</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a810cafce9c6d5bb3e3ec3e8754ca924c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94" kindref="member">statusErrDef</ref></type>
        <definition>statusErrDef lireFichierCSV</definition>
        <argsstring>(const char *dir)</argsstring>
        <name>lireFichierCSV</name>
        <param>
          <type>const char *</type>
          <declname>dir</declname>
        </param>
        <briefdescription>
<para>function to read a general state CSV file until the end of the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dir</parametername>
</parameternamelist>
<parameterdescription>
<para>location of the CSV file to read </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>statusErrDef errEGNotFoundInFile general code (EG) not found in liaisonEGEtat.csv linked with the CSV file name, errOpenEtatsFile when the file fails to open, noError when the function exits successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="240" column="14" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="240" bodyend="271"/>
        <references refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94a14f3c6267c7217f788ac3ce46bd60835" compoundref="status_error_define_8h" startline="70">errEGNotFoundInFile</references>
        <references refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94a12741a8473115ee22c636b93fbef02a4" compoundref="status_error_define_8h" startline="71">errOpenEtatsFile</references>
        <references refid="csv_8cpp_1a3020b0ac72052eacef78e25c399ce4a6" compoundref="csv_8cpp" startline="713" endline="722">getNomFichiercsv</references>
        <references refid="config_define_8h_1a706068f562dd5c64a8b7bbd4b2298dd1" compoundref="config_define_8h" startline="100">MAX_LINE_SIZE</references>
        <references refid="config_define_8h_1a9eb6992d76f02128388ae95c0415604a" compoundref="config_define_8h" startline="96">MAX_PATH_LENGTH</references>
        <references refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" compoundref="status_error_define_8h" startline="22">noError</references>
        <references refid="csv_8cpp_1a134699cebaabd514d62d43ed18cee67d" compoundref="csv_8cpp" startline="372" endline="408">remplirStructure</references>
        <referencedby refid="csv_8cpp_1a44cd2131057b27749a53caad3ec77eb9" compoundref="csv_8cpp" startline="135" endline="179">refreshCSV</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1ad8987ecbd2c5ce44f2a930a28a012b99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94" kindref="member">statusErrDef</ref></type>
        <definition>statusErrDef lireFichierVannes</definition>
        <argsstring>(const char *fileName)</argsstring>
        <name>lireFichierVannes</name>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
<para>function to read &quot;physicalCONFIG_valves.csv&quot; until the end of the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>location and name of the CSV file to read </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>statusErrDef errOpenPhysValvesFile when the file fails to open, noError when the function exits successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="282" column="14" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="282" bodyend="302"/>
        <references refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94aec51d52bd267e359598a1910f12b65b4" compoundref="status_error_define_8h" startline="72">errOpenPhysValvesFile</references>
        <references refid="config_define_8h_1a56d2ae7dc00f8f120314a9de4a9efcbe" compoundref="config_define_8h" startline="104">MAX_PHYSICAL_LINE_SIZE</references>
        <references refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" compoundref="status_error_define_8h" startline="22">noError</references>
        <references refid="csv_8cpp_1a6a858555dd145f61931120807004cf55" compoundref="csv_8cpp" startline="416" endline="437">remplirStructureVannesPhysicalCONFIG</references>
        <referencedby refid="csv_8cpp_1a57ce52f959b46f63b41ea53578833174" compoundref="csv_8cpp" startline="61" endline="124">initCSV</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1ade728b48c3405b05be12be8e6b5d5206" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94" kindref="member">statusErrDef</ref></type>
        <definition>statusErrDef lireFichierSensors</definition>
        <argsstring>(const char *fileName)</argsstring>
        <name>lireFichierSensors</name>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
<para>function to read &quot;physicalCONFIG_sensors.csv&quot; until the end of the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>location and name of the CSV file to read </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>statusErrDef errOpenPhysSensorsFile when the file fails to open, noError when the function exits successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="313" column="14" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="313" bodyend="333"/>
        <references refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94a9883c20b0333d35a1a7b2342627a536c" compoundref="status_error_define_8h" startline="73">errOpenPhysSensorsFile</references>
        <references refid="config_define_8h_1a56d2ae7dc00f8f120314a9de4a9efcbe" compoundref="config_define_8h" startline="104">MAX_PHYSICAL_LINE_SIZE</references>
        <references refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" compoundref="status_error_define_8h" startline="22">noError</references>
        <references refid="csv_8cpp_1a268de499892be836f042bfc112a904ea" compoundref="csv_8cpp" startline="445" endline="481">remplirStructureSensorsPhysicalCONFIG</references>
        <referencedby refid="csv_8cpp_1a57ce52f959b46f63b41ea53578833174" compoundref="csv_8cpp" startline="61" endline="124">initCSV</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a2e7bd32b81cf14bdd3867119fe4c75c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94" kindref="member">statusErrDef</ref></type>
        <definition>statusErrDef lireFichierActivation</definition>
        <argsstring>(const char *fileName)</argsstring>
        <name>lireFichierActivation</name>
        <param>
          <type>const char *</type>
          <declname>fileName</declname>
        </param>
        <briefdescription>
<para>function to read &quot;activation.csv&quot; until the end of the file. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fileName</parametername>
</parameternamelist>
<parameterdescription>
<para>location and name of the CSV file to read </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>statusErrDef errOpenPhysSensorsFile when the file fails to open, noError when the function exits successfully. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="344" column="14" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="344" bodyend="364"/>
        <references refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94aa8dbde321e31e69aeaa49dc7f37bbc16" compoundref="status_error_define_8h" startline="74">errOpenActivationFile</references>
        <references refid="config_define_8h_1a706068f562dd5c64a8b7bbd4b2298dd1" compoundref="config_define_8h" startline="100">MAX_LINE_SIZE</references>
        <references refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" compoundref="status_error_define_8h" startline="22">noError</references>
        <references refid="csv_8cpp_1ab2ab3ac11ce7f23bde4ddf923050b533" compoundref="csv_8cpp" startline="489" endline="501">remplirStructureCommon</references>
        <referencedby refid="csv_8cpp_1a57ce52f959b46f63b41ea53578833174" compoundref="csv_8cpp" startline="61" endline="124">initCSV</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a134699cebaabd514d62d43ed18cee67d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void remplirStructure</definition>
        <argsstring>(char *ligne, int id)</argsstring>
        <name>remplirStructure</name>
        <param>
          <type>char *</type>
          <declname>ligne</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>function to fill in the general CSV structure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ligne</parametername>
</parameternamelist>
<parameterdescription>
<para>the CSV line to read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the position of the line in the CSV file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="372" column="6" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="372" bodyend="408"/>
        <references refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="sensor_8cpp" startline="17">i</references>
        <referencedby refid="csv_8cpp_1a810cafce9c6d5bb3e3ec3e8754ca924c" compoundref="csv_8cpp" startline="240" endline="271">lireFichierCSV</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a6a858555dd145f61931120807004cf55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void remplirStructureVannesPhysicalCONFIG</definition>
        <argsstring>(char *ligne, int id)</argsstring>
        <name>remplirStructureVannesPhysicalCONFIG</name>
        <param>
          <type>char *</type>
          <declname>ligne</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>function to fill in the physical config valves structure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ligne</parametername>
</parameternamelist>
<parameterdescription>
<para>the CSV line to read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the position of the line in the CSV file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="416" column="6" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="416" bodyend="437"/>
        <referencedby refid="csv_8cpp_1ad8987ecbd2c5ce44f2a930a28a012b99" compoundref="csv_8cpp" startline="282" endline="302">lireFichierVannes</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a268de499892be836f042bfc112a904ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void remplirStructureSensorsPhysicalCONFIG</definition>
        <argsstring>(char *ligne, int id)</argsstring>
        <name>remplirStructureSensorsPhysicalCONFIG</name>
        <param>
          <type>char *</type>
          <declname>ligne</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>function to fill in the physical config sensors structure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ligne</parametername>
</parameternamelist>
<parameterdescription>
<para>the CSV line to read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the position of the line in the CSV file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="445" column="6" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="445" bodyend="481"/>
        <referencedby refid="csv_8cpp_1ade728b48c3405b05be12be8e6b5d5206" compoundref="csv_8cpp" startline="313" endline="333">lireFichierSensors</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1ab2ab3ac11ce7f23bde4ddf923050b533" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void remplirStructureCommon</definition>
        <argsstring>(char *ligne, int id)</argsstring>
        <name>remplirStructureCommon</name>
        <param>
          <type>char *</type>
          <declname>ligne</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>function to fill in the activation CSV structure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ligne</parametername>
</parameternamelist>
<parameterdescription>
<para>the CSV line to read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the position of the line in the CSV file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="489" column="6" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="489" bodyend="501"/>
        <referencedby refid="csv_8cpp_1a2e7bd32b81cf14bdd3867119fe4c75c2" compoundref="csv_8cpp" startline="344" endline="364">lireFichierActivation</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1acbc16f61c722ba86bac4676c366b09bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void remplirEG</definition>
        <argsstring>(char *ligne, int id)</argsstring>
        <name>remplirEG</name>
        <param>
          <type>char *</type>
          <declname>ligne</declname>
        </param>
        <param>
          <type>int</type>
          <declname>id</declname>
        </param>
        <briefdescription>
<para>function to fill in the link between EG and CSV file name structure. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ligne</parametername>
</parameternamelist>
<parameterdescription>
<para>the CSV line to read. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>the position of the line in the CSV file. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="509" column="6" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="509" bodyend="531"/>
        <references refid="csv_8cpp_1a12cdfbd8ea531195d20d46386535a300" compoundref="csv_8cpp" startline="729" endline="741">removeCarriageReturn</references>
        <referencedby refid="csv_8cpp_1a6c7104900937bff943d7f36f4f9cb7f0" compoundref="csv_8cpp" startline="207" endline="228">lireFichierEG</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1ab23dd7339a925518cc7ccb9c8ff617c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int getValeur</definition>
        <argsstring>(int ligne)</argsstring>
        <name>getValeur</name>
        <param>
          <type>int</type>
          <declname>ligne</declname>
        </param>
        <briefdescription>
<para>function getter of the value of valves from a general state CSV </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ligne</parametername>
</parameternamelist>
<parameterdescription>
<para>the line in the CSV file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int the value of the valve from a specific line </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="539" column="5" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="539" bodyend="542"/>
        <referencedby refid="classvalve_1aac2cd5441d1c1a1180e18af2468a4547" compoundref="valve_8cpp" startline="179" endline="212">valve::actionnementValve</referencedby>
        <referencedby refid="valve_8cpp_1a659d21ba354b3f756293314bf2c8dfc4" compoundref="valve_8cpp" startline="509" endline="516">getValveValue</referencedby>
        <referencedby refid="classvalve_1ae69c309265ce0269e0207043fb6b06ca" compoundref="valve_8cpp" startline="319" endline="381">valve::isDependanceActive</referencedby>
        <referencedby refid="valve_8cpp_1add60b51091e6e3c9653ed8400895e3a1" compoundref="valve_8cpp" startline="464" endline="473">setValvesValue</referencedby>
        <referencedby refid="classvalve_1a1364f1770f8218d7a0077ca2a953371b" compoundref="valve_8cpp" startline="226" endline="298">valve::verifDependanceValves</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a8a1a11a2771226955ece875f170f2f0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int * getDependanceVannes</definition>
        <argsstring>(int ligne)</argsstring>
        <name>getDependanceVannes</name>
        <param>
          <type>int</type>
          <declname>ligne</declname>
        </param>
        <briefdescription>
<para>function getter of all the dependances for a valve from a general state CSV </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ligne</parametername>
</parameternamelist>
<parameterdescription>
<para>the line in the CSV file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int* an array of all the dependances for a valve </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="550" column="5" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="550" bodyend="565"/>
        <references refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="sensor_8cpp" startline="17">i</references>
        <references refid="config_define_8h_1abcc3ea803cac2ea690fac3f5ceb23211" compoundref="config_define_8h" startline="90">MAX_VALVES</references>
        <referencedby refid="classvalve_1ae69c309265ce0269e0207043fb6b06ca" compoundref="valve_8cpp" startline="319" endline="381">valve::isDependanceActive</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a42f02acae60cc52772c5933fd490bac0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double getTimerVannes</definition>
        <argsstring>(int ligne)</argsstring>
        <name>getTimerVannes</name>
        <param>
          <type>int</type>
          <declname>ligne</declname>
        </param>
        <briefdescription>
<para>function getter of the timer until value is set for a valve from a general state CSV </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ligne</parametername>
</parameternamelist>
<parameterdescription>
<para>the line in the CSV file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>double the value of the timer </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="573" column="8" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="573" bodyend="576"/>
        <referencedby refid="classvalve_1a5dae9e8165e79289e59e2426f9d75d29" compoundref="valve_8cpp" startline="408" endline="419">valve::isTimerExeeded</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a06ba5d2bce46c751d895dbf5678036ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t getEtatInitialVannes</definition>
        <argsstring>(int ligne)</argsstring>
        <name>getEtatInitialVannes</name>
        <param>
          <type>int</type>
          <declname>ligne</declname>
        </param>
        <briefdescription>
<para>function getter of the initial value of a valve from &quot;physicalCONFIG_valves.csv&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ligne</parametername>
</parameternamelist>
<parameterdescription>
<para>the line in the CSV file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t the initial value of the valve </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="584" column="9" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="584" bodyend="587"/>
        <referencedby refid="valve_8cpp_1ad4e5b817af0b9501d2a6e6deb0c89445" compoundref="valve_8cpp" startline="483" endline="499">getValvesInitValue</referencedby>
        <referencedby refid="classvalve_1a86e16a5cc95d9bec4ee8eec6722760fe" compoundref="valve_8cpp" startline="73" endline="124">valve::initValve</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a208a08d00b78203d1aa620f641f0b9c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t getPortGPIO</definition>
        <argsstring>(int ligne)</argsstring>
        <name>getPortGPIO</name>
        <param>
          <type>int</type>
          <declname>ligne</declname>
        </param>
        <briefdescription>
<para>function getter of a valve GPIO port from &quot;physicalCONFIG_valves.csv&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ligne</parametername>
</parameternamelist>
<parameterdescription>
<para>the line in the CSV file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t the GPIO port of the valve </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="595" column="9" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="595" bodyend="598"/>
        <referencedby refid="classvalve_1a86e16a5cc95d9bec4ee8eec6722760fe" compoundref="valve_8cpp" startline="73" endline="124">valve::initValve</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1aef9ab8154afc84c92aa1ad1875286257" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t getSensorType</definition>
        <argsstring>(int ligne)</argsstring>
        <name>getSensorType</name>
        <param>
          <type>int</type>
          <declname>ligne</declname>
        </param>
        <briefdescription>
<para>function getter of a sensor type from &quot;physicalCONFIG_sensors.csv&quot; can be 1 for an MCP3008 channel or 2 for a modbus serial sensor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ligne</parametername>
</parameternamelist>
<parameterdescription>
<para>the line in the CSV file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t the sensor type </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="608" column="9" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="608" bodyend="611"/>
        <referencedby refid="classsensor_1ad3b9b11298007378ec5b9127694580af" compoundref="sensor_8cpp" startline="129" endline="148">sensor::extinctSensor</referencedby>
        <referencedby refid="classsensor_1a136fdef7c492900f3ff9baa211607cb5" compoundref="sensor_8cpp" startline="69" endline="120">sensor::initSensor</referencedby>
        <referencedby refid="sensor_8cpp_1a084710571b3a23b14fe1bc00ef626f52" compoundref="sensor_8cpp" startline="170" endline="229">readChannels</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1af50249c502d41696db81f66102243725" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t getModbusAddrRemoteSlave</definition>
        <argsstring>(int ligne)</argsstring>
        <name>getModbusAddrRemoteSlave</name>
        <param>
          <type>int</type>
          <declname>ligne</declname>
        </param>
        <briefdescription>
<para>function getter of a modbus sensor address from &quot;physicalCONFIG_sensors.csv&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ligne</parametername>
</parameternamelist>
<parameterdescription>
<para>the line in the CSV file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t the modbus sensor address </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="620" column="10" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="620" bodyend="623"/>
        <referencedby refid="classsensor_1a136fdef7c492900f3ff9baa211607cb5" compoundref="sensor_8cpp" startline="69" endline="120">sensor::initSensor</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a1a782f9afa439eff3d3e807e2149de16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t getModbusStartAddress</definition>
        <argsstring>(int ligne)</argsstring>
        <name>getModbusStartAddress</name>
        <param>
          <type>int</type>
          <declname>ligne</declname>
        </param>
        <briefdescription>
<para>function getter of a sensor start address to read, from &quot;physicalCONFIG_sensors.csv&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ligne</parametername>
</parameternamelist>
<parameterdescription>
<para>the line in the CSV file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t the sensor start address to read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="632" column="10" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="632" bodyend="635"/>
        <referencedby refid="classsensor_1a136fdef7c492900f3ff9baa211607cb5" compoundref="sensor_8cpp" startline="69" endline="120">sensor::initSensor</referencedby>
        <referencedby refid="sensor_8cpp_1a084710571b3a23b14fe1bc00ef626f52" compoundref="sensor_8cpp" startline="170" endline="229">readChannels</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a2029326f9ecfe8df759544bfbcdd93b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t getModbusBaudRate</definition>
        <argsstring>(int ligne)</argsstring>
        <name>getModbusBaudRate</name>
        <param>
          <type>int</type>
          <declname>ligne</declname>
        </param>
        <briefdescription>
<para>function getter of a sensor start address to read, from &quot;physicalCONFIG_sensors.csv&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ligne</parametername>
</parameternamelist>
<parameterdescription>
<para>the line in the CSV file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t the sensor start address to read </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="644" column="10" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="644" bodyend="647"/>
        <referencedby refid="classsensor_1a136fdef7c492900f3ff9baa211607cb5" compoundref="sensor_8cpp" startline="69" endline="120">sensor::initSensor</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1aa6a5195ce6685aec2a8e126bc67118e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char</type>
        <definition>char getModbusParity</definition>
        <argsstring>(int ligne)</argsstring>
        <name>getModbusParity</name>
        <param>
          <type>int</type>
          <declname>ligne</declname>
        </param>
        <briefdescription>
<para>function getter of the modbus parity from &quot;physicalCONFIG_sensors.csv&quot; can be &apos;O&apos; (Odd), &apos;E&apos; (Even) or &apos;N&apos; (None). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ligne</parametername>
</parameternamelist>
<parameterdescription>
<para>the line in the CSV file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t the modbus parity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="657" column="6" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="657" bodyend="660"/>
        <referencedby refid="classsensor_1a136fdef7c492900f3ff9baa211607cb5" compoundref="sensor_8cpp" startline="69" endline="120">sensor::initSensor</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1aefc2a7d71cf262dae1961f894ad59250" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t getModbusDataBits</definition>
        <argsstring>(int ligne)</argsstring>
        <name>getModbusDataBits</name>
        <param>
          <type>int</type>
          <declname>ligne</declname>
        </param>
        <briefdescription>
<para>function getter of the modbus number of data bits from &quot;physicalCONFIG_sensors.csv&quot; can be 5,6,7 or 8. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ligne</parametername>
</parameternamelist>
<parameterdescription>
<para>the line in the CSV file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t the modbus number of data bits </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="669" column="10" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="669" bodyend="672"/>
        <referencedby refid="classsensor_1a136fdef7c492900f3ff9baa211607cb5" compoundref="sensor_8cpp" startline="69" endline="120">sensor::initSensor</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a7db02ded3c19f89ba4b3cde6585fd7e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t getModbusStopBit</definition>
        <argsstring>(int ligne)</argsstring>
        <name>getModbusStopBit</name>
        <param>
          <type>int</type>
          <declname>ligne</declname>
        </param>
        <briefdescription>
<para>function getter of the modbus number of stop bits from &quot;physicalCONFIG_sensors.csv&quot; can be 1 or 2. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ligne</parametername>
</parameternamelist>
<parameterdescription>
<para>the line in the CSV file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t the modbus number of stop bits </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="681" column="10" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="681" bodyend="684"/>
        <referencedby refid="classsensor_1a136fdef7c492900f3ff9baa211607cb5" compoundref="sensor_8cpp" startline="69" endline="120">sensor::initSensor</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a59b3cd375160ea778a774e62c7c64f7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t getActivation</definition>
        <argsstring>(int ligne)</argsstring>
        <name>getActivation</name>
        <param>
          <type>int</type>
          <declname>ligne</declname>
        </param>
        <briefdescription>
<para>function getter of the activation of a sensor or a valve from &quot;activation.csv&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ligne</parametername>
</parameternamelist>
<parameterdescription>
<para>the line in the CSV file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t the activation of a sensor or a valve (1 if activated or 0 if not) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="692" column="9" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="692" bodyend="695"/>
        <referencedby refid="classvalve_1a82140bbfd1329eea0100b8359cc9ebc2" compoundref="valve_8cpp" startline="135" endline="164">valve::actionnementValvesInit</referencedby>
        <referencedby refid="classvalve_1a3db8975d7c2cc46b33fd65e683e8c6df" compoundref="valve_8cpp" startline="431" endline="456">valve::extinctValve</referencedby>
        <referencedby refid="valve_8cpp_1ad4e5b817af0b9501d2a6e6deb0c89445" compoundref="valve_8cpp" startline="483" endline="499">getValvesInitValue</referencedby>
        <referencedby refid="classsensor_1a136fdef7c492900f3ff9baa211607cb5" compoundref="sensor_8cpp" startline="69" endline="120">sensor::initSensor</referencedby>
        <referencedby refid="classvalve_1a86e16a5cc95d9bec4ee8eec6722760fe" compoundref="valve_8cpp" startline="73" endline="124">valve::initValve</referencedby>
        <referencedby refid="valve_8cpp_1ad6ff3dc82333091b53b2fbdc3ef5842e" compoundref="valve_8cpp" startline="525" endline="536">resetTimers</referencedby>
        <referencedby refid="opl_8cpp_1a72f880ddaa32ea28cd0e12658c3e8d67" compoundref="opl_8cpp" startline="229" endline="235">setActivated_Out_CN</referencedby>
        <referencedby refid="valve_8cpp_1add60b51091e6e3c9653ed8400895e3a1" compoundref="valve_8cpp" startline="464" endline="473">setValvesValue</referencedby>
        <referencedby refid="classvalve_1a1364f1770f8218d7a0077ca2a953371b" compoundref="valve_8cpp" startline="226" endline="298">valve::verifDependanceValves</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a70bcd737e5a40f36e1cccaf3a7f63379" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int16_t</type>
        <definition>int16_t getEGcsv</definition>
        <argsstring>(int ligne)</argsstring>
        <name>getEGcsv</name>
        <param>
          <type>int</type>
          <declname>ligne</declname>
        </param>
        <briefdescription>
<para>function getter of the general state from &quot;liaisonEGEtat.csv&quot; </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ligne</parametername>
</parameternamelist>
<parameterdescription>
<para>the line in the CSV file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint16_t the value of the general state of a specific line </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="703" column="9" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="703" bodyend="706"/>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a3020b0ac72052eacef78e25c399ce4a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * getNomFichiercsv</definition>
        <argsstring>()</argsstring>
        <name>getNomFichiercsv</name>
        <briefdescription>
<para>function getter of the name of a general state CSV file of the current general state (EG) </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const char* the name of a general state CSV file </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="713" column="12" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="713" bodyend="722"/>
        <references refid="csv_8cpp_1a6b63c44df8b905d77b2c66f1cea86204" compoundref="csv_8cpp" startline="749" endline="758">searchEG</references>
        <referencedby refid="csv_8cpp_1a810cafce9c6d5bb3e3ec3e8754ca924c" compoundref="csv_8cpp" startline="240" endline="271">lireFichierCSV</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a12cdfbd8ea531195d20d46386535a300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void removeCarriageReturn</definition>
        <argsstring>(char *str)</argsstring>
        <name>removeCarriageReturn</name>
        <param>
          <type>char *</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>function that removes the carriage return from the end a line of a general state CSV file before strdup is called. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>the line in the CSV file </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="729" column="6" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="729" bodyend="741"/>
        <references refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="sensor_8cpp" startline="17">i</references>
        <referencedby refid="csv_8cpp_1acbc16f61c722ba86bac4676c366b09bb" compoundref="csv_8cpp" startline="509" endline="531">remplirEG</referencedby>
      </memberdef>
      <memberdef kind="function" id="csv_8cpp_1a6b63c44df8b905d77b2c66f1cea86204" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int searchEG</definition>
        <argsstring>()</argsstring>
        <name>searchEG</name>
        <briefdescription>
<para>search the general state (EG) from the link between EG and CSV file name structure </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>int the general state (EG) </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" line="749" column="5" bodyfile="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp" bodystart="749" bodyend="758"/>
        <references refid="opl_8cpp_1a063c1e70bcbeb72b1c2483b200839a85" compoundref="opl_8cpp" startline="19">EG</references>
        <references refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" compoundref="sensor_8cpp" startline="17">i</references>
        <references refid="config_define_8h_1a706068f562dd5c64a8b7bbd4b2298dd1" compoundref="config_define_8h" startline="100">MAX_LINE_SIZE</references>
        <referencedby refid="csv_8cpp_1a3020b0ac72052eacef78e25c399ce4a6" compoundref="csv_8cpp" startline="713" endline="722">getNomFichiercsv</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Module to read CSV configuration files. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mael Parot, Benoit Brice </para>
</simplesect>
<simplesect kind="version"><para>1.2 </para>
</simplesect>
<simplesect kind="date"><para>11/04/2024</para>
</simplesect>
Contains all functions related to reading CSV files and writing the content into structures. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="csv_8h" kindref="compound">csv.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="20" refid="csv_8cpp_1ae4cbc04f9c4323ec7a331ddef6b578c4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_ligne_c_s_v" kindref="compound">LigneCSV</ref>*<sp/><ref refid="csv_8cpp_1ae4cbc04f9c4323ec7a331ddef6b578c4" kindref="member">dataEtats</ref>;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="csv_8cpp_1a0604c88114d265423bd058430aef5358" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_ligne_vannes" kindref="compound">LigneVannes</ref>*<sp/><ref refid="csv_8cpp_1a0604c88114d265423bd058430aef5358" kindref="member">dataPhysicalConfigVannes</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="36" refid="csv_8cpp_1a545bddd902931ddd3692b3792d3958b4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_ligne_sensors" kindref="compound">LigneSensors</ref>*<sp/><ref refid="csv_8cpp_1a545bddd902931ddd3692b3792d3958b4" kindref="member">dataPhysicalConfigSensors</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="csv_8cpp_1a6d01cb64bb5d3e9ccda826e7b892ae18" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_ligne_activation" kindref="compound">LigneActivation</ref>*<sp/><ref refid="csv_8cpp_1a6d01cb64bb5d3e9ccda826e7b892ae18" kindref="member">dataActivation</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="csv_8cpp_1ac119725e56f891ac0af277ad61a9eaf4" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_ligne_e_g" kindref="compound">LigneEG</ref>*<sp/><ref refid="csv_8cpp_1ac119725e56f891ac0af277ad61a9eaf4" kindref="member">dataEG</ref>;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="csv_8cpp_1a57ce52f959b46f63b41ea53578833174" refkind="member"><highlight class="normal"><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94" kindref="member">statusErrDef</ref><sp/><ref refid="csv_8cpp_1a57ce52f959b46f63b41ea53578833174" kindref="member">initCSV</ref>()<sp/></highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94" kindref="member">statusErrDef</ref><sp/>res<sp/>=<sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" kindref="member">noError</ref>;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="csv_8cpp_1a44cd2131057b27749a53caad3ec77eb9" kindref="member">refreshCSV</ref>();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/********************Partie_PhysicalConfig_Vannes********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata_physical_config_vannes" kindref="compound">dataPhysicalConfigVannes</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_ligne_vannes" kindref="compound">LigneVannes</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_ligne_vannes" kindref="compound">LigneVannes</ref>));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structdata_physical_config_vannes" kindref="compound">dataPhysicalConfigVannes</ref><sp/>==<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Error<sp/>allocating<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94a52c0a0dc9ef385f587dda867044b4643" kindref="member">errAllocDataPhysValves</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="structdata_physical_config_vannes" kindref="compound">dataPhysicalConfigVannes</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_ligne_vannes" kindref="compound">LigneVannes</ref>));</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="opl_8cpp_1a063c1e70bcbeb72b1c2483b200839a85" kindref="member">EG</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="csv_8cpp_1ad8987ecbd2c5ce44f2a930a28a012b99" kindref="member">lireFichierVannes</ref>(<ref refid="config_define_8h_1ab5026e01006a4457989b22c57cc98f02" kindref="member">PHYSICAL_CONFIG_VANNES_DIRECTORY</ref>);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" kindref="member">noError</ref>)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/********************Partie_PhysicalConfig_Sensors********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata_physical_config_sensors" kindref="compound">dataPhysicalConfigSensors</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_ligne_sensors" kindref="compound">LigneSensors</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_ligne_sensors" kindref="compound">LigneSensors</ref>));</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structdata_physical_config_sensors" kindref="compound">dataPhysicalConfigSensors</ref><sp/>==<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Error<sp/>allocating<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ae97856e69e4799dd26242af002ea490d" kindref="member">errAllocDataPhysSensors</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="structdata_physical_config_sensors" kindref="compound">dataPhysicalConfigSensors</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_ligne_sensors" kindref="compound">LigneSensors</ref>));</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="opl_8cpp_1a063c1e70bcbeb72b1c2483b200839a85" kindref="member">EG</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="csv_8cpp_1ade728b48c3405b05be12be8e6b5d5206" kindref="member">lireFichierSensors</ref>(<ref refid="config_define_8h_1adb2604b345fe7f2f732f29ff27f245ab" kindref="member">PHYSICAL_CONFIG_SENSORS_DIRECTORY</ref>);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" kindref="member">noError</ref>)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/********************Partie_PhysicalConfig_Activation********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata_activation" kindref="compound">dataActivation</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_ligne_activation" kindref="compound">LigneActivation</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_ligne_activation" kindref="compound">LigneActivation</ref>));</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structdata_activation" kindref="compound">dataActivation</ref><sp/>==<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Error<sp/>allocating<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94aa748b576dd63269692bf94745ebde592" kindref="member">errAllocDataActivation</ref>;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="structdata_activation" kindref="compound">dataActivation</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_ligne_activation" kindref="compound">LigneActivation</ref>));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="opl_8cpp_1a063c1e70bcbeb72b1c2483b200839a85" kindref="member">EG</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="csv_8cpp_1a2e7bd32b81cf14bdd3867119fe4c75c2" kindref="member">lireFichierActivation</ref>(<ref refid="config_define_8h_1af03b9ef4da5daeff7665f07931101fdb" kindref="member">COMMON_PHYSICAL_CONFIG_DIRECTORY</ref>);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" kindref="member">noError</ref>)</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" kindref="member">noError</ref>;</highlight></codeline>
<codeline lineno="124"><highlight class="normal">}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="csv_8cpp_1a44cd2131057b27749a53caad3ec77eb9" refkind="member"><highlight class="normal"><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94" kindref="member">statusErrDef</ref><sp/><ref refid="csv_8cpp_1a44cd2131057b27749a53caad3ec77eb9" kindref="member">refreshCSV</ref>()<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal">{</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94" kindref="member">statusErrDef</ref><sp/>res<sp/>=<sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" kindref="member">noError</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>free(<ref refid="structdata_e_g" kindref="compound">dataEG</ref>);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>free(<ref refid="structdata_etats" kindref="compound">dataEtats</ref>);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/********************Partie_EG_Etat********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata_e_g" kindref="compound">dataEG</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_ligne_e_g" kindref="compound">LigneEG</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_ligne_e_g" kindref="compound">LigneEG</ref>));</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structdata_e_g" kindref="compound">dataEG</ref><sp/>==<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Error<sp/>allocating<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94a7f5fa8b07e851d30728b48a6706f3406" kindref="member">errAllocDataEG</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="structdata_e_g" kindref="compound">dataEG</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_ligne_e_g" kindref="compound">LigneEG</ref>));</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="opl_8cpp_1a063c1e70bcbeb72b1c2483b200839a85" kindref="member">EG</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="csv_8cpp_1a6c7104900937bff943d7f36f4f9cb7f0" kindref="member">lireFichierEG</ref>(<ref refid="config_define_8h_1a4714f9212329c04dc628e204388611a1" kindref="member">EG_ETAT_DIRECTORY</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" kindref="member">noError</ref>)</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment"><sp/><sp/><sp/><sp/>/********************Partie_CSV********************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structdata_etats" kindref="compound">dataEtats</ref><sp/>=<sp/>(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_ligne_c_s_v" kindref="compound">LigneCSV</ref>*)malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_ligne_c_s_v" kindref="compound">LigneCSV</ref>));</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structdata_etats" kindref="compound">dataEtats</ref><sp/>==<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Error<sp/>allocating<sp/>memory&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94aa17dee312ce9f8b84311bcfeeea687e4" kindref="member">errAllocDataEtats</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="structdata_etats" kindref="compound">dataEtats</ref>,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_ligne_c_s_v" kindref="compound">LigneCSV</ref>));</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="opl_8cpp_1a063c1e70bcbeb72b1c2483b200839a85" kindref="member">EG</ref><sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res<sp/>=<sp/><ref refid="csv_8cpp_1a810cafce9c6d5bb3e3ec3e8754ca924c" kindref="member">lireFichierCSV</ref>(<ref refid="config_define_8h_1a61233d5f57b883028d50415837de9da1" kindref="member">STATE_CSV_DIRECTORY</ref>);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(res<sp/>!=<sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" kindref="member">noError</ref>)</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="csv_8cpp_1a39604608c86deb3e5925261c5a9413ca" refkind="member"><highlight class="normal"><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94" kindref="member">statusErrDef</ref><sp/><ref refid="csv_8cpp_1a39604608c86deb3e5925261c5a9413ca" kindref="member">extinctCSV</ref>()<sp/></highlight></codeline>
<codeline lineno="188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>free(<ref refid="structdata_e_g" kindref="compound">dataEG</ref>);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/>free(<ref refid="structdata_etats" kindref="compound">dataEtats</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>free(<ref refid="structdata_physical_config_vannes" kindref="compound">dataPhysicalConfigVannes</ref>);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/>free(<ref refid="structdata_physical_config_sensors" kindref="compound">dataPhysicalConfigSensors</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>free(<ref refid="structdata_activation" kindref="compound">dataActivation</ref>);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" kindref="member">noError</ref>;</highlight></codeline>
<codeline lineno="196"><highlight class="normal">}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="csv_8cpp_1a6c7104900937bff943d7f36f4f9cb7f0" refkind="member"><highlight class="normal"><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94" kindref="member">statusErrDef</ref><sp/><ref refid="csv_8cpp_1a6c7104900937bff943d7f36f4f9cb7f0" kindref="member">lireFichierEG</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName)</highlight></codeline>
<codeline lineno="208"><highlight class="normal">{</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/><ref refid="classfile" kindref="compound">file</ref><sp/>=<sp/>fopen(fileName,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classfile" kindref="compound">file</ref><sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Erreur<sp/>lors<sp/>de<sp/>l&apos;ouverture<sp/>du<sp/>fichier<sp/>lireFichierEG&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94a30f34309a812bd0a316489459b8bb55d" kindref="member">errOpenEGFile</ref>;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ligne[<ref refid="config_define_8h_1a706068f562dd5c64a8b7bbd4b2298dd1" kindref="member">MAX_LINE_SIZE</ref>];</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(ligne,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ligne),<sp/><ref refid="classfile" kindref="compound">file</ref>)<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ligne[strcspn(ligne,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="csv_8cpp_1acbc16f61c722ba86bac4676c366b09bb" kindref="member">remplirEG</ref>(ligne,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">++;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(<ref refid="classfile" kindref="compound">file</ref>);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" kindref="member">noError</ref>;</highlight></codeline>
<codeline lineno="228"><highlight class="normal">}</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="240" refid="csv_8cpp_1a810cafce9c6d5bb3e3ec3e8754ca924c" refkind="member"><highlight class="normal"><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94" kindref="member">statusErrDef</ref><sp/><ref refid="csv_8cpp_1a810cafce9c6d5bb3e3ec3e8754ca924c" kindref="member">lireFichierCSV</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dir)<sp/></highlight></codeline>
<codeline lineno="241"><highlight class="normal">{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>nameCSV<sp/>=<sp/><ref refid="csv_8cpp_1a3020b0ac72052eacef78e25c399ce4a6" kindref="member">getNomFichiercsv</ref>();</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nameCSV<sp/>==<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Erreur<sp/>code<sp/>EG<sp/>non<sp/>trouve<sp/>dans<sp/>liaisonEGEtat.csv&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94a14f3c6267c7217f788ac3ce46bd60835" kindref="member">errEGNotFoundInFile</ref>;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;nameCSV:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>nameCSV);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>fileName[<ref refid="config_define_8h_1a9eb6992d76f02128388ae95c0415604a" kindref="member">MAX_PATH_LENGTH</ref>];</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>snprintf(fileName,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(fileName),<sp/></highlight><highlight class="stringliteral">&quot;%s%s&quot;</highlight><highlight class="normal">,<sp/>dir,<sp/>nameCSV);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/><ref refid="classfile" kindref="compound">file</ref><sp/>=<sp/>fopen(fileName,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classfile" kindref="compound">file</ref><sp/>==<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Erreur<sp/>lors<sp/>de<sp/>l&apos;ouverture<sp/>du<sp/>fichier<sp/>lireFichierCSV&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94a12741a8473115ee22c636b93fbef02a4" kindref="member">errOpenEtatsFile</ref>;</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ligne[<ref refid="config_define_8h_1a706068f562dd5c64a8b7bbd4b2298dd1" kindref="member">MAX_LINE_SIZE</ref>];</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(ligne,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ligne),<sp/><ref refid="classfile" kindref="compound">file</ref>)<sp/>!=<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ligne[strcspn(ligne,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="csv_8cpp_1a134699cebaabd514d62d43ed18cee67d" kindref="member">remplirStructure</ref>(ligne,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">++;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(<ref refid="classfile" kindref="compound">file</ref>);</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" kindref="member">noError</ref>;</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="csv_8cpp_1ad8987ecbd2c5ce44f2a930a28a012b99" refkind="member"><highlight class="normal"><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94" kindref="member">statusErrDef</ref><sp/><ref refid="csv_8cpp_1ad8987ecbd2c5ce44f2a930a28a012b99" kindref="member">lireFichierVannes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName)<sp/></highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/><ref refid="classfile" kindref="compound">file</ref><sp/>=<sp/>fopen(fileName,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classfile" kindref="compound">file</ref><sp/>==<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Erreur<sp/>lors<sp/>de<sp/>l&apos;ouverture<sp/>du<sp/>fichier<sp/>lireFichierVannes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94aec51d52bd267e359598a1910f12b65b4" kindref="member">errOpenPhysValvesFile</ref>;</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ligne[<ref refid="config_define_8h_1a56d2ae7dc00f8f120314a9de4a9efcbe" kindref="member">MAX_PHYSICAL_LINE_SIZE</ref>];</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(ligne,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ligne),<sp/><ref refid="classfile" kindref="compound">file</ref>)<sp/>!=<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ligne[strcspn(ligne,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="csv_8cpp_1a6a858555dd145f61931120807004cf55" kindref="member">remplirStructureVannesPhysicalCONFIG</ref>(ligne,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">++;</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(<ref refid="classfile" kindref="compound">file</ref>);</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" kindref="member">noError</ref>;</highlight></codeline>
<codeline lineno="302"><highlight class="normal">}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="313" refid="csv_8cpp_1ade728b48c3405b05be12be8e6b5d5206" refkind="member"><highlight class="normal"><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94" kindref="member">statusErrDef</ref><sp/><ref refid="csv_8cpp_1ade728b48c3405b05be12be8e6b5d5206" kindref="member">lireFichierSensors</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName)<sp/></highlight></codeline>
<codeline lineno="314"><highlight class="normal">{</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/><ref refid="classfile" kindref="compound">file</ref><sp/>=<sp/>fopen(fileName,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classfile" kindref="compound">file</ref><sp/>==<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Erreur<sp/>lors<sp/>de<sp/>l&apos;ouverture<sp/>du<sp/>fichier<sp/>lireFichierSensors&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94a9883c20b0333d35a1a7b2342627a536c" kindref="member">errOpenPhysSensorsFile</ref>;</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ligne[<ref refid="config_define_8h_1a56d2ae7dc00f8f120314a9de4a9efcbe" kindref="member">MAX_PHYSICAL_LINE_SIZE</ref>];</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(ligne,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ligne),<sp/><ref refid="classfile" kindref="compound">file</ref>)<sp/>!=<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ligne[strcspn(ligne,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="csv_8cpp_1a268de499892be836f042bfc112a904ea" kindref="member">remplirStructureSensorsPhysicalCONFIG</ref>(ligne,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">++;</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="330"><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(<ref refid="classfile" kindref="compound">file</ref>);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" kindref="member">noError</ref>;</highlight></codeline>
<codeline lineno="333"><highlight class="normal">}</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight></codeline>
<codeline lineno="344" refid="csv_8cpp_1a2e7bd32b81cf14bdd3867119fe4c75c2" refkind="member"><highlight class="normal"><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94" kindref="member">statusErrDef</ref><sp/><ref refid="csv_8cpp_1a2e7bd32b81cf14bdd3867119fe4c75c2" kindref="member">lireFichierActivation</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>fileName)<sp/></highlight></codeline>
<codeline lineno="345"><highlight class="normal">{</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>FILE*<sp/><ref refid="classfile" kindref="compound">file</ref><sp/>=<sp/>fopen(fileName,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classfile" kindref="compound">file</ref><sp/>==<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Erreur<sp/>lors<sp/>de<sp/>l&apos;ouverture<sp/>du<sp/>fichier<sp/>lireFichierActivation&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94aa8dbde321e31e69aeaa49dc7f37bbc16" kindref="member">errOpenActivationFile</ref>;</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>ligne[<ref refid="config_define_8h_1a706068f562dd5c64a8b7bbd4b2298dd1" kindref="member">MAX_LINE_SIZE</ref>];</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fgets(ligne,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(ligne),<sp/><ref refid="classfile" kindref="compound">file</ref>)<sp/>!=<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ligne[strcspn(ligne,<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">)]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="csv_8cpp_1ab2ab3ac11ce7f23bde4ddf923050b533" kindref="member">remplirStructureCommon</ref>(ligne,<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">++;</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/>fclose(<ref refid="classfile" kindref="compound">file</ref>);</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="status_error_define_8h_1adf0c44f8de9b8e78b0e56caacfa1ac94ab22416d928134d1c6c7b2e8d2c31f20b" kindref="member">noError</ref>;</highlight></codeline>
<codeline lineno="364"><highlight class="normal">}</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight></codeline>
<codeline lineno="372" refid="csv_8cpp_1a134699cebaabd514d62d43ed18cee67d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="csv_8cpp_1a134699cebaabd514d62d43ed18cee67d" kindref="member">remplirStructure</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ligne,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="373"><highlight class="normal">{</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>token<sp/>=<sp/>strtok(ligne,<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>token2<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colonne<sp/>=<sp/>0,<sp/><ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0,<sp/>valeurDependance<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(token<sp/>!=<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(colonne)</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atoi(token)<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdata_etats" kindref="compound">dataEtats</ref>-&gt;valeur[id]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdata_etats" kindref="compound">dataEtats</ref>-&gt;valeur[id]<sp/>=<sp/>atoi(token);</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdata_etats" kindref="compound">dataEtats</ref>-&gt;timerVannes[id]<sp/>=<sp/>atof(token);</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token2<sp/>=<sp/>strtok(token,<sp/></highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(token2<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valeurDependance<sp/>=<sp/>atoi(token2);</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdata_etats" kindref="compound">dataEtats</ref>-&gt;dependanceVannes[id][<ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>=<sp/>valeurDependance;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++;</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token2<sp/>=<sp/>strtok(NULL,<sp/></highlight><highlight class="stringliteral">&quot;|&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colonne++;</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token<sp/>=<sp/>strtok(NULL,<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal">}</highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="csv_8cpp_1a6a858555dd145f61931120807004cf55" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="csv_8cpp_1a6a858555dd145f61931120807004cf55" kindref="member">remplirStructureVannesPhysicalCONFIG</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ligne,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="417"><highlight class="normal">{</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>token<sp/>=<sp/>strtok(ligne,<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colonne<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(token<sp/>!=<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(colonne)</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdata_physical_config_vannes" kindref="compound">dataPhysicalConfigVannes</ref>-&gt;etatInitial[id]<sp/>=<sp/>atoi(token);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdata_physical_config_vannes" kindref="compound">dataPhysicalConfigVannes</ref>-&gt;portGPIO[id]<sp/>=<sp/>atoi(token);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colonne++;</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token<sp/>=<sp/>strtok(NULL,<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="437"><highlight class="normal">}</highlight></codeline>
<codeline lineno="438"><highlight class="normal"></highlight></codeline>
<codeline lineno="445" refid="csv_8cpp_1a268de499892be836f042bfc112a904ea" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="csv_8cpp_1a268de499892be836f042bfc112a904ea" kindref="member">remplirStructureSensorsPhysicalCONFIG</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ligne,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="446"><highlight class="normal">{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>token<sp/>=<sp/>strtok(ligne,<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colonne<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(token<sp/>!=<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(colonne)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>2:</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdata_physical_config_sensors" kindref="compound">dataPhysicalConfigSensors</ref>-&gt;type[id]<sp/>=<sp/>atoi(token);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>3:</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdata_physical_config_sensors" kindref="compound">dataPhysicalConfigSensors</ref>-&gt;modbusAddrRemoteSlave[id]<sp/>=<sp/>atoi(token);</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>4:</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdata_physical_config_sensors" kindref="compound">dataPhysicalConfigSensors</ref>-&gt;modbusStartAddress[id]<sp/>=<sp/>atoi(token);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>5:</highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdata_physical_config_sensors" kindref="compound">dataPhysicalConfigSensors</ref>-&gt;modbusBaudRate[id]<sp/>=<sp/>atoi(token);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>6:</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdata_physical_config_sensors" kindref="compound">dataPhysicalConfigSensors</ref>-&gt;modbusParity[id]<sp/>=<sp/>token[0];</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>7:</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdata_physical_config_sensors" kindref="compound">dataPhysicalConfigSensors</ref>-&gt;modbusDataBits[id]<sp/>=<sp/>atoi(token);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>8:</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdata_physical_config_sensors" kindref="compound">dataPhysicalConfigSensors</ref>-&gt;modbusStopBit[id]<sp/>=<sp/>atoi(token);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colonne++;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token<sp/>=<sp/>strtok(NULL,<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="csv_8cpp_1ab2ab3ac11ce7f23bde4ddf923050b533" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="csv_8cpp_1ab2ab3ac11ce7f23bde4ddf923050b533" kindref="member">remplirStructureCommon</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ligne,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="490"><highlight class="normal">{</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>token<sp/>=<sp/>strtok(ligne,<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colonne<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(token<sp/>!=<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(colonne<sp/>==<sp/>2)</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdata_activation" kindref="compound">dataActivation</ref>-&gt;activation[id]<sp/>=<sp/>atoi(token);</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colonne++;</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token<sp/>=<sp/>strtok(NULL,<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="501"><highlight class="normal">}</highlight></codeline>
<codeline lineno="502"><highlight class="normal"></highlight></codeline>
<codeline lineno="509" refid="csv_8cpp_1acbc16f61c722ba86bac4676c366b09bb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="csv_8cpp_1acbc16f61c722ba86bac4676c366b09bb" kindref="member">remplirEG</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>ligne,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>token<sp/>=<sp/>strtok(ligne,<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colonne<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(token<sp/>!=<sp/>NULL)<sp/></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(colonne)</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdata_e_g" kindref="compound">dataEG</ref>-&gt;EG[id]<sp/>=<sp/>(int16_t)strtol(token,<sp/>NULL,<sp/>0);</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>1:</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="csv_8cpp_1a12cdfbd8ea531195d20d46386535a300" kindref="member">removeCarriageReturn</ref>(token);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structdata_e_g" kindref="compound">dataEG</ref>-&gt;nom[id]<sp/>=<sp/>strdup(token);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colonne++;</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token<sp/>=<sp/>strtok(NULL,<sp/></highlight><highlight class="stringliteral">&quot;;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal">}</highlight></codeline>
<codeline lineno="532"><highlight class="normal"></highlight></codeline>
<codeline lineno="539" refid="csv_8cpp_1ab23dd7339a925518cc7ccb9c8ff617c9" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="csv_8cpp_1ab23dd7339a925518cc7ccb9c8ff617c9" kindref="member">getValeur</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ligne)<sp/></highlight></codeline>
<codeline lineno="540"><highlight class="normal">{</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdata_etats" kindref="compound">dataEtats</ref>-&gt;valeur[ligne];</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="550" refid="csv_8cpp_1a8a1a11a2771226955ece875f170f2f0c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="csv_8cpp_1a8a1a11a2771226955ece875f170f2f0c" kindref="member">getDependanceVannes</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ligne)<sp/></highlight></codeline>
<codeline lineno="551"><highlight class="normal">{</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>tab<sp/>=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)malloc(<ref refid="config_define_8h_1abcc3ea803cac2ea690fac3f5ceb23211" kindref="member">MAX_VALVES</ref><sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="553"><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tab<sp/>!=<sp/>NULL)</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="config_define_8h_1abcc3ea803cac2ea690fac3f5ceb23211" kindref="member">MAX_VALVES</ref>;<sp/><ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)<sp/></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tab[<ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>=<sp/><ref refid="structdata_etats" kindref="compound">dataEtats</ref>-&gt;dependanceVannes[ligne][<ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>];</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tab;</highlight></codeline>
<codeline lineno="565"><highlight class="normal">}</highlight></codeline>
<codeline lineno="566"><highlight class="normal"></highlight></codeline>
<codeline lineno="573" refid="csv_8cpp_1a42f02acae60cc52772c5933fd490bac0" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="csv_8cpp_1a42f02acae60cc52772c5933fd490bac0" kindref="member">getTimerVannes</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ligne)<sp/></highlight></codeline>
<codeline lineno="574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdata_etats" kindref="compound">dataEtats</ref>-&gt;timerVannes[ligne];</highlight></codeline>
<codeline lineno="576"><highlight class="normal">}</highlight></codeline>
<codeline lineno="577"><highlight class="normal"></highlight></codeline>
<codeline lineno="584" refid="csv_8cpp_1a06ba5d2bce46c751d895dbf5678036ae" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="csv_8cpp_1a06ba5d2bce46c751d895dbf5678036ae" kindref="member">getEtatInitialVannes</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ligne)<sp/></highlight></codeline>
<codeline lineno="585"><highlight class="normal">{</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdata_physical_config_vannes" kindref="compound">dataPhysicalConfigVannes</ref>-&gt;etatInitial[ligne];</highlight></codeline>
<codeline lineno="587"><highlight class="normal">}</highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight></codeline>
<codeline lineno="595" refid="csv_8cpp_1a208a08d00b78203d1aa620f641f0b9c9" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="csv_8cpp_1a208a08d00b78203d1aa620f641f0b9c9" kindref="member">getPortGPIO</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ligne)<sp/></highlight></codeline>
<codeline lineno="596"><highlight class="normal">{</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdata_physical_config_vannes" kindref="compound">dataPhysicalConfigVannes</ref>-&gt;portGPIO[ligne];</highlight></codeline>
<codeline lineno="598"><highlight class="normal">}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="608" refid="csv_8cpp_1aef9ab8154afc84c92aa1ad1875286257" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="csv_8cpp_1aef9ab8154afc84c92aa1ad1875286257" kindref="member">getSensorType</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ligne)</highlight></codeline>
<codeline lineno="609"><highlight class="normal">{</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdata_physical_config_sensors" kindref="compound">dataPhysicalConfigSensors</ref>-&gt;type[ligne];</highlight></codeline>
<codeline lineno="611"><highlight class="normal">}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="620" refid="csv_8cpp_1af50249c502d41696db81f66102243725" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="csv_8cpp_1af50249c502d41696db81f66102243725" kindref="member">getModbusAddrRemoteSlave</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ligne)</highlight></codeline>
<codeline lineno="621"><highlight class="normal">{</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdata_physical_config_sensors" kindref="compound">dataPhysicalConfigSensors</ref>-&gt;modbusAddrRemoteSlave[ligne];</highlight></codeline>
<codeline lineno="623"><highlight class="normal">}</highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="632" refid="csv_8cpp_1a1a782f9afa439eff3d3e807e2149de16" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="csv_8cpp_1a1a782f9afa439eff3d3e807e2149de16" kindref="member">getModbusStartAddress</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ligne)</highlight></codeline>
<codeline lineno="633"><highlight class="normal">{</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdata_physical_config_sensors" kindref="compound">dataPhysicalConfigSensors</ref>-&gt;modbusStartAddress[ligne];</highlight></codeline>
<codeline lineno="635"><highlight class="normal">}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="644" refid="csv_8cpp_1a2029326f9ecfe8df759544bfbcdd93b9" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="csv_8cpp_1a2029326f9ecfe8df759544bfbcdd93b9" kindref="member">getModbusBaudRate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ligne)</highlight></codeline>
<codeline lineno="645"><highlight class="normal">{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdata_physical_config_sensors" kindref="compound">dataPhysicalConfigSensors</ref>-&gt;modbusBaudRate[ligne];</highlight></codeline>
<codeline lineno="647"><highlight class="normal">}</highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight></codeline>
<codeline lineno="657" refid="csv_8cpp_1aa6a5195ce6685aec2a8e126bc67118e8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="csv_8cpp_1aa6a5195ce6685aec2a8e126bc67118e8" kindref="member">getModbusParity</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ligne)</highlight></codeline>
<codeline lineno="658"><highlight class="normal">{</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdata_physical_config_sensors" kindref="compound">dataPhysicalConfigSensors</ref>-&gt;modbusParity[ligne];</highlight></codeline>
<codeline lineno="660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight></codeline>
<codeline lineno="669" refid="csv_8cpp_1aefc2a7d71cf262dae1961f894ad59250" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="csv_8cpp_1aefc2a7d71cf262dae1961f894ad59250" kindref="member">getModbusDataBits</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ligne)</highlight></codeline>
<codeline lineno="670"><highlight class="normal">{</highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdata_physical_config_sensors" kindref="compound">dataPhysicalConfigSensors</ref>-&gt;modbusDataBits[ligne];</highlight></codeline>
<codeline lineno="672"><highlight class="normal">}</highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight></codeline>
<codeline lineno="681" refid="csv_8cpp_1a7db02ded3c19f89ba4b3cde6585fd7e4" refkind="member"><highlight class="normal">uint16_t<sp/><ref refid="csv_8cpp_1a7db02ded3c19f89ba4b3cde6585fd7e4" kindref="member">getModbusStopBit</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ligne)</highlight></codeline>
<codeline lineno="682"><highlight class="normal">{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdata_physical_config_sensors" kindref="compound">dataPhysicalConfigSensors</ref>-&gt;modbusStopBit[ligne];</highlight></codeline>
<codeline lineno="684"><highlight class="normal">}</highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight></codeline>
<codeline lineno="692" refid="csv_8cpp_1a59b3cd375160ea778a774e62c7c64f7d" refkind="member"><highlight class="normal">uint8_t<sp/><ref refid="csv_8cpp_1a59b3cd375160ea778a774e62c7c64f7d" kindref="member">getActivation</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ligne)<sp/></highlight></codeline>
<codeline lineno="693"><highlight class="normal">{</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdata_activation" kindref="compound">dataActivation</ref>-&gt;activation[ligne];</highlight></codeline>
<codeline lineno="695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight></codeline>
<codeline lineno="703" refid="csv_8cpp_1a70bcd737e5a40f36e1cccaf3a7f63379" refkind="member"><highlight class="normal">int16_t<sp/><ref refid="csv_8cpp_1a70bcd737e5a40f36e1cccaf3a7f63379" kindref="member">getEGcsv</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ligne)<sp/></highlight></codeline>
<codeline lineno="704"><highlight class="normal">{</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdata_e_g" kindref="compound">dataEG</ref>-&gt;EG[ligne];</highlight></codeline>
<codeline lineno="706"><highlight class="normal">}</highlight></codeline>
<codeline lineno="707"><highlight class="normal"></highlight></codeline>
<codeline lineno="713" refid="csv_8cpp_1a3020b0ac72052eacef78e25c399ce4a6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="csv_8cpp_1a3020b0ac72052eacef78e25c399ce4a6" kindref="member">getNomFichiercsv</ref>()<sp/></highlight></codeline>
<codeline lineno="714"><highlight class="normal">{</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ligne<sp/>=<sp/><ref refid="csv_8cpp_1a6b63c44df8b905d77b2c66f1cea86204" kindref="member">searchEG</ref>();</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ligne<sp/>!=<sp/>-1)</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structdata_e_g" kindref="compound">dataEG</ref>-&gt;nom[ligne];</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="722"><highlight class="normal">}</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="729" refid="csv_8cpp_1a12cdfbd8ea531195d20d46386535a300" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="csv_8cpp_1a12cdfbd8ea531195d20d46386535a300" kindref="member">removeCarriageReturn</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>str)<sp/></highlight></codeline>
<codeline lineno="730"><highlight class="normal">{</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(str[<ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str[<ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;\r&apos;</highlight><highlight class="normal">)<sp/></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str[<ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Replace<sp/>carriage<sp/>return<sp/>with<sp/>null<sp/>terminator</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>after<sp/>the<sp/>first<sp/>carriage<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++;</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="741"><highlight class="normal">}</highlight></codeline>
<codeline lineno="742"><highlight class="normal"></highlight></codeline>
<codeline lineno="749" refid="csv_8cpp_1a6b63c44df8b905d77b2c66f1cea86204" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="csv_8cpp_1a6b63c44df8b905d77b2c66f1cea86204" kindref="member">searchEG</ref>()</highlight></codeline>
<codeline lineno="750"><highlight class="normal">{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>=<sp/>0;<sp/><ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref><sp/>&lt;<sp/><ref refid="config_define_8h_1a706068f562dd5c64a8b7bbd4b2298dd1" kindref="member">MAX_LINE_SIZE</ref>;<sp/><ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>++)</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structdata_e_g" kindref="compound">dataEG</ref>-&gt;EG[<ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>]<sp/>==<sp/><ref refid="opl_8cpp_1a063c1e70bcbeb72b1c2483b200839a85" kindref="member">EG</ref>)</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="sensor_8cpp_1acb559820d9ca11295b4500f179ef6392" kindref="member">i</ref>;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="758"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/src/csv.cpp"/>
  </compounddef>
</doxygen>
