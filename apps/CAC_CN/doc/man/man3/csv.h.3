.TH "C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/include/csv.h" 3 "Version 1.1" "CAC_CN" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/Squaria/Documents/openPOWERLINK_V2_CAC/apps/CAC_CN/include/csv.h
.SH SYNOPSIS
.br
.PP
\fR#include <stdio\&.h>\fP
.br
\fR#include <stdlib\&.h>\fP
.br
\fR#include <stdint\&.h>\fP
.br
\fR#include <string>\fP
.br
\fR#include <ctype\&.h>\fP
.br
\fR#include 'configDefine\&.h'\fP
.br
\fR#include 'statusErrorDefine\&.h'\fP
.br
\fR#include 'opl\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBLigneCSV\fP"
.br
.ti -1c
.RI "struct \fBLigneVannes\fP"
.br
.ti -1c
.RI "struct \fBLigneSensors\fP"
.br
.ti -1c
.RI "struct \fBLigneActivation\fP"
.br
.ti -1c
.RI "struct \fBLigneEG\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBstatusErrDef\fP \fBinitCSV\fP ()"
.br
.RI "function to initialize the struct containing the values and read the 5 different CSV files\&. "
.ti -1c
.RI "\fBstatusErrDef\fP \fBrefreshCSV\fP ()"
.br
.RI "function to get values of the new general state CSV and 'liaisonEGEtat\&.csv' "
.ti -1c
.RI "\fBstatusErrDef\fP \fBextinctCSV\fP ()"
.br
.RI "function to free the 5 structs "
.ti -1c
.RI "\fBstatusErrDef\fP \fBlireFichierCSV\fP (const char *dir)"
.br
.RI "function to read a general state CSV file until the end of the file\&. "
.ti -1c
.RI "\fBstatusErrDef\fP \fBlireFichierVannes\fP (const char *fileName)"
.br
.RI "function to read 'physicalCONFIG_valves\&.csv' until the end of the file\&. "
.ti -1c
.RI "\fBstatusErrDef\fP \fBlireFichierSensors\fP (const char *fileName)"
.br
.RI "function to read 'physicalCONFIG_sensors\&.csv' until the end of the file\&. "
.ti -1c
.RI "\fBstatusErrDef\fP \fBlireFichierActivation\fP (const char *fileName)"
.br
.RI "function to read 'activation\&.csv' until the end of the file\&. "
.ti -1c
.RI "\fBstatusErrDef\fP \fBlireFichierEG\fP (const char *fileName)"
.br
.RI "function to read 'liaisonEGEtat\&.csv' until the end of the file\&. "
.ti -1c
.RI "void \fBremplirStructure\fP (char *ligne, int id)"
.br
.RI "function to fill in the general CSV structure\&. "
.ti -1c
.RI "void \fBremplirStructureVannesPhysicalCONFIG\fP (char *ligne, int id)"
.br
.RI "function to fill in the physical config valves structure\&. "
.ti -1c
.RI "void \fBremplirStructureSensorsPhysicalCONFIG\fP (char *ligne, int id)"
.br
.RI "function to fill in the physical config sensors structure\&. "
.ti -1c
.RI "void \fBremplirStructureCommon\fP (char *ligne, int id)"
.br
.RI "function to fill in the activation CSV structure\&. "
.ti -1c
.RI "void \fBremplirEG\fP (char *ligne, int id)"
.br
.RI "function to fill in the link between EG and CSV file name structure\&. "
.ti -1c
.RI "int \fBgetValeur\fP (int ligne)"
.br
.RI "function getter of the value of valves from a general state CSV "
.ti -1c
.RI "int * \fBgetDependanceVannes\fP (int ligne)"
.br
.RI "function getter of all the dependances for a valve from a general state CSV "
.ti -1c
.RI "double \fBgetTimerVannes\fP (int ligne)"
.br
.RI "function getter of the timer until value is set for a valve from a general state CSV "
.ti -1c
.RI "uint8_t \fBgetEtatInitialVannes\fP (int ligne)"
.br
.RI "function getter of the initial value of a valve from 'physicalCONFIG_valves\&.csv' "
.ti -1c
.RI "uint8_t \fBgetEtatInitialSensors\fP (int ligne)"
.br
.RI "function getter of the initial value of a sensor from 'physicalCONFIG_sensors\&.csv' "
.ti -1c
.RI "uint8_t \fBgetPortGPIO\fP (int ligne)"
.br
.RI "function getter of the GPIO port of a valve from 'physicalCONFIG_valves\&.csv' "
.ti -1c
.RI "float \fBgetMinValue\fP (int ligne)"
.br
.RI "function getter of the max value of a sensor from 'physicalCONFIG_sensors\&.csv' "
.ti -1c
.RI "float \fBgetMaxValue\fP (int ligne)"
.br
.RI "function getter of the min value of a sensor from 'physicalCONFIG_sensors\&.csv' "
.ti -1c
.RI "uint8_t \fBgetActivation\fP (int ligne)"
.br
.RI "function getter of the activation of a sensor or a valve from 'activation\&.csv' "
.ti -1c
.RI "int16_t \fBgetEGcsv\fP (int ligne)"
.br
.RI "function getter of the general state from 'liaisonEGEtat\&.csv' "
.ti -1c
.RI "const char * \fBgetNomFichiercsv\fP ()"
.br
.RI "function getter of the name of a general state CSV file of the current general state (EG) "
.ti -1c
.RI "int \fBsearchEG\fP ()"
.br
.RI "search the general state (EG) from the link between EG and CSV file name structure "
.ti -1c
.RI "void \fBremoveCarriageReturn\fP (char *str)"
.br
.RI "function that removes the carriage return from the end a line of a general state CSV file before strdup is called\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "struct \fBLigneCSV\fP * \fBdataEtats\fP"
.br
.ti -1c
.RI "struct \fBLigneVannes\fP * \fBdataPhysicalConfigVannes\fP"
.br
.ti -1c
.RI "struct \fBLigneSensors\fP * \fBdataPhysicalConfigSensors\fP"
.br
.ti -1c
.RI "struct \fBLigneActivation\fP * \fBdataActivation\fP"
.br
.ti -1c
.RI "struct \fBLigneEG\fP * \fBdataEG\fP"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBstatusErrDef\fP extinctCSV ()"

.PP
function to free the 5 structs 
.PP
\fBReturns\fP
.RS 4
statusErrDef noError when the function exits successfully\&. 
.RE
.PP

.PP
Definition at line \fB172\fP of file \fBcsv\&.cpp\fP\&.
.SS "uint8_t getActivation (int ligne)"

.PP
function getter of the activation of a sensor or a valve from 'activation\&.csv' 
.PP
\fBParameters\fP
.RS 4
\fIligne\fP the line in the CSV file 
.RE
.PP
\fBReturns\fP
.RS 4
uint8_t the activation of a sensor or a valve (1 if activated or 0 if not) 
.RE
.PP

.PP
Definition at line \fB587\fP of file \fBcsv\&.cpp\fP\&.
.SS "int * getDependanceVannes (int ligne)"

.PP
function getter of all the dependances for a valve from a general state CSV 
.PP
\fBParameters\fP
.RS 4
\fIligne\fP the line in the CSV file 
.RE
.PP
\fBReturns\fP
.RS 4
int* an array of all the dependances for a valve 
.RE
.PP

.PP
Definition at line \fB498\fP of file \fBcsv\&.cpp\fP\&.
.SS "int16_t getEGcsv (int ligne)"

.PP
function getter of the general state from 'liaisonEGEtat\&.csv' 
.PP
\fBParameters\fP
.RS 4
\fIligne\fP the line in the CSV file 
.RE
.PP
\fBReturns\fP
.RS 4
uint16_t the value of the general state of a specific line 
.RE
.PP

.PP
Definition at line \fB598\fP of file \fBcsv\&.cpp\fP\&.
.SS "uint8_t getEtatInitialSensors (int ligne)"

.PP
function getter of the initial value of a sensor from 'physicalCONFIG_sensors\&.csv' 
.PP
\fBParameters\fP
.RS 4
\fIligne\fP the line in the CSV file 
.RE
.PP
\fBReturns\fP
.RS 4
uint8_t the initial value of the sensor 
.RE
.PP

.PP
Definition at line \fB543\fP of file \fBcsv\&.cpp\fP\&.
.SS "uint8_t getEtatInitialVannes (int ligne)"

.PP
function getter of the initial value of a valve from 'physicalCONFIG_valves\&.csv' 
.PP
\fBParameters\fP
.RS 4
\fIligne\fP the line in the CSV file 
.RE
.PP
\fBReturns\fP
.RS 4
uint8_t the initial value of the valve 
.RE
.PP

.PP
Definition at line \fB532\fP of file \fBcsv\&.cpp\fP\&.
.SS "float getMaxValue (int ligne)"

.PP
function getter of the min value of a sensor from 'physicalCONFIG_sensors\&.csv' 
.PP
\fBParameters\fP
.RS 4
\fIligne\fP the line in the CSV file 
.RE
.PP
\fBReturns\fP
.RS 4
uint8_t the min value of the sensor 
.RE
.PP

.PP
Definition at line \fB576\fP of file \fBcsv\&.cpp\fP\&.
.SS "float getMinValue (int ligne)"

.PP
function getter of the max value of a sensor from 'physicalCONFIG_sensors\&.csv' 
.PP
\fBParameters\fP
.RS 4
\fIligne\fP the line in the CSV file 
.RE
.PP
\fBReturns\fP
.RS 4
uint8_t the max value of the sensor 
.RE
.PP

.PP
Definition at line \fB565\fP of file \fBcsv\&.cpp\fP\&.
.SS "const char * getNomFichiercsv ()"

.PP
function getter of the name of a general state CSV file of the current general state (EG) 
.PP
\fBReturns\fP
.RS 4
const char* the name of a general state CSV file 
.RE
.PP

.PP
Definition at line \fB608\fP of file \fBcsv\&.cpp\fP\&.
.SS "uint8_t getPortGPIO (int ligne)"

.PP
function getter of the GPIO port of a valve from 'physicalCONFIG_valves\&.csv' 
.PP
\fBParameters\fP
.RS 4
\fIligne\fP the line in the CSV file 
.RE
.PP
\fBReturns\fP
.RS 4
uint8_t the GPIO port of the valve 
.RE
.PP

.PP
Definition at line \fB554\fP of file \fBcsv\&.cpp\fP\&.
.SS "double getTimerVannes (int ligne)"

.PP
function getter of the timer until value is set for a valve from a general state CSV 
.PP
\fBParameters\fP
.RS 4
\fIligne\fP the line in the CSV file 
.RE
.PP
\fBReturns\fP
.RS 4
double the value of the timer 
.RE
.PP

.PP
Definition at line \fB521\fP of file \fBcsv\&.cpp\fP\&.
.SS "int getValeur (int ligne)"

.PP
function getter of the value of valves from a general state CSV 
.PP
\fBParameters\fP
.RS 4
\fIligne\fP the line in the CSV file 
.RE
.PP
\fBReturns\fP
.RS 4
int the value of the valve from a specific line 
.RE
.PP

.PP
Definition at line \fB487\fP of file \fBcsv\&.cpp\fP\&.
.SS "\fBstatusErrDef\fP initCSV ()"

.PP
function to initialize the struct containing the values and read the 5 different CSV files\&. 
.PP
\fBReturns\fP
.RS 4
statusErrDef that values errAllocDataPhysValves, errAllocDataPhysSensors, errAllocDataActivation in case of a malloc allocation error or noError when the function exits successfully\&. 
.RE
.PP

.PP
Definition at line \fB61\fP of file \fBcsv\&.cpp\fP\&.
.SS "\fBstatusErrDef\fP lireFichierActivation (const char * fileName)"

.PP
function to read 'activation\&.csv' until the end of the file\&. 
.PP
\fBParameters\fP
.RS 4
\fIfileName\fP location and name of the CSV file to read 
.RE
.PP
\fBReturns\fP
.RS 4
statusErrDef errOpenPhysSensorsFile when the file fails to open, noError when the function exits successfully\&. 
.RE
.PP

.PP
Definition at line \fB329\fP of file \fBcsv\&.cpp\fP\&.
.SS "\fBstatusErrDef\fP lireFichierCSV (const char * dir)"

.PP
function to read a general state CSV file until the end of the file\&. 
.PP
\fBParameters\fP
.RS 4
\fIdir\fP location of the CSV file to read 
.RE
.PP
\fBReturns\fP
.RS 4
statusErrDef errEGNotFoundInFile general code (EG) not found in liaisonEGEtat\&.csv linked with the CSV file name, errOpenEtatsFile when the file fails to open, noError when the function exits successfully\&. 
.RE
.PP

.PP
Definition at line \fB225\fP of file \fBcsv\&.cpp\fP\&.
.SS "\fBstatusErrDef\fP lireFichierEG (const char * fileName)"

.PP
function to read 'liaisonEGEtat\&.csv' until the end of the file\&. 
.PP
\fBParameters\fP
.RS 4
\fIfileName\fP location and name of the CSV file to read 
.RE
.PP
\fBReturns\fP
.RS 4
statusErrDef errOpenEGFile when the file fails to open, noError when the function exits successfully\&. 
.RE
.PP

.PP
Definition at line \fB192\fP of file \fBcsv\&.cpp\fP\&.
.SS "\fBstatusErrDef\fP lireFichierSensors (const char * fileName)"

.PP
function to read 'physicalCONFIG_sensors\&.csv' until the end of the file\&. 
.PP
\fBParameters\fP
.RS 4
\fIfileName\fP location and name of the CSV file to read 
.RE
.PP
\fBReturns\fP
.RS 4
statusErrDef errOpenPhysSensorsFile when the file fails to open, noError when the function exits successfully\&. 
.RE
.PP

.PP
Definition at line \fB298\fP of file \fBcsv\&.cpp\fP\&.
.SS "\fBstatusErrDef\fP lireFichierVannes (const char * fileName)"

.PP
function to read 'physicalCONFIG_valves\&.csv' until the end of the file\&. 
.PP
\fBParameters\fP
.RS 4
\fIfileName\fP location and name of the CSV file to read 
.RE
.PP
\fBReturns\fP
.RS 4
statusErrDef errOpenPhysValvesFile when the file fails to open, noError when the function exits successfully\&. 
.RE
.PP

.PP
Definition at line \fB267\fP of file \fBcsv\&.cpp\fP\&.
.SS "\fBstatusErrDef\fP refreshCSV ()"

.PP
function to get values of the new general state CSV and 'liaisonEGEtat\&.csv' 
.PP
\fBReturns\fP
.RS 4
statusErrDef that values errAllocDataEG , errAllocDataEtats, in case of a malloc allocation error or noError when the function exits successfully\&. 
.RE
.PP

.PP
Definition at line \fB127\fP of file \fBcsv\&.cpp\fP\&.
.SS "void removeCarriageReturn (char * str)"

.PP
function that removes the carriage return from the end a line of a general state CSV file before strdup is called\&. 
.PP
\fBParameters\fP
.RS 4
\fIstr\fP the line in the CSV file 
.RE
.PP

.PP
Definition at line \fB624\fP of file \fBcsv\&.cpp\fP\&.
.SS "void remplirEG (char * ligne, int id)"

.PP
function to fill in the link between EG and CSV file name structure\&. 
.PP
\fBParameters\fP
.RS 4
\fIligne\fP the CSV line to read\&. 
.br
\fIid\fP the position of the line in the CSV file\&. 
.RE
.PP

.PP
Definition at line \fB462\fP of file \fBcsv\&.cpp\fP\&.
.SS "void remplirStructure (char * ligne, int id)"

.PP
function to fill in the general CSV structure\&. 
.PP
\fBParameters\fP
.RS 4
\fIligne\fP the CSV line to read\&. 
.br
\fIid\fP the position of the line in the CSV file\&. 
.RE
.PP

.PP
Definition at line \fB357\fP of file \fBcsv\&.cpp\fP\&.
.SS "void remplirStructureCommon (char * ligne, int id)"

.PP
function to fill in the activation CSV structure\&. 
.PP
\fBParameters\fP
.RS 4
\fIligne\fP the CSV line to read\&. 
.br
\fIid\fP the position of the line in the CSV file\&. 
.RE
.PP

.PP
Definition at line \fB442\fP of file \fBcsv\&.cpp\fP\&.
.SS "void remplirStructureSensorsPhysicalCONFIG (char * ligne, int id)"

.PP
function to fill in the physical config sensors structure\&. 
.PP
\fBParameters\fP
.RS 4
\fIligne\fP the CSV line to read\&. 
.br
\fIid\fP the position of the line in the CSV file\&. 
.RE
.PP

.PP
Definition at line \fB418\fP of file \fBcsv\&.cpp\fP\&.
.SS "void remplirStructureVannesPhysicalCONFIG (char * ligne, int id)"

.PP
function to fill in the physical config valves structure\&. 
.PP
\fBParameters\fP
.RS 4
\fIligne\fP the CSV line to read\&. 
.br
\fIid\fP the position of the line in the CSV file\&. 
.RE
.PP

.PP
Definition at line \fB396\fP of file \fBcsv\&.cpp\fP\&.
.SS "int searchEG ()"

.PP
search the general state (EG) from the link between EG and CSV file name structure 
.PP
\fBReturns\fP
.RS 4
int the general state (EG) 
.RE
.PP

.PP
Definition at line \fB644\fP of file \fBcsv\&.cpp\fP\&.
.SH "Variable Documentation"
.PP 
.SS "struct \fBLigneActivation\fP* dataActivation\fR [extern]\fP"

.PP
Definition at line \fB43\fP of file \fBcsv\&.cpp\fP\&.
.SS "struct \fBLigneEG\fP* dataEG\fR [extern]\fP"

.PP
Definition at line \fB51\fP of file \fBcsv\&.cpp\fP\&.
.SS "struct \fBLigneCSV\fP* dataEtats\fR [extern]\fP"

.PP
Definition at line \fB20\fP of file \fBcsv\&.cpp\fP\&.
.SS "struct \fBLigneSensors\fP* dataPhysicalConfigSensors\fR [extern]\fP"

.PP
Definition at line \fB36\fP of file \fBcsv\&.cpp\fP\&.
.SS "struct \fBLigneVannes\fP* dataPhysicalConfigVannes\fR [extern]\fP"

.PP
Definition at line \fB28\fP of file \fBcsv\&.cpp\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for CAC_CN from the source code\&.
